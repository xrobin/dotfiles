#!/usr/bin/env python3
""" Validate IPv4 and IPv6 addresses."""

import argparse
import ipaddress
import sys


def parse_args():
    """Parse options."""
    parser = argparse.ArgumentParser()
    parser.add_argument('-q', '--quiet',
                        action='store_true',
                        help="decrease verbosity.")
    class_group = parser.add_mutually_exclusive_group()
    class_group.add_argument('-4', '--ipv4',
                             action='store_true',
                             help="Only accept IPv4 addresses.")
    class_group.add_argument('-6', '--ipv6',
                             action='store_true',
                             help="Only accept IPv6 addresses.")
    parser.add_argument('ip',
                        metavar="<ADDRESS>",
                        help="The IP address to validate.")
    args = parser.parse_args()
    return args


def _main():
    args = parse_args()

    try:
        addr = ipaddress.ip_address(args.ip)
    except ValueError:
        if not args.quiet:
            sys.stderr.write("Error: %s: not an IP address\n" % args.ip)
        sys.exit(1)
    if args.ipv6 and isinstance(addr, ipaddress.IPv4Address):
        if not args.quiet:
            sys.stderr.write("Error: %s: IPv4 address\n" % args.ip)
        sys.exit(1)
    elif args.ipv4 and isinstance(addr, ipaddress.IPv6Address):
        if not args.quiet:
            sys.stderr.write("Error: %s: IPv6 address\n" % args.ip)
        sys.exit(1)
    else:
        if not args.quiet:
            sys.stderr.write("Success: %s: valid IPv%s address\n" % (
                args.ip, addr.version))
        sys.exit(0)


if __name__ == "__main__":
    _main()
