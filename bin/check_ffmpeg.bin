#!/bin/bash

eval "$(docopts -V - -h - : "$@" <<EOF
Usage: check_ffmpeg [options] [--] <file>...

      --quiet    Run quietly, only output upon error.
      --help     Show help options.
      --version  Print program version.
      --verbose  Always print file name
----
check_ffmpeg 0.1
Check the integrity of media files with ffmpeg.

Copyright (C) 2018 Xavier Robin
License GPL 3+
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
EOF
)"

function max() {
	echo $(( $1 > $2 ? $1 : $2 ))
}

if [ "${#file[@]}" -ne 1 ]; then
	global_return=0
	# Set trap to exit immediately upon Ctrl+C
	# Otherwise only the child check_ffmpeg aborts and the loop continues
	trap "exit 130" SIGINT
	# Pass quiet and verbose
	if $quiet; then
		extra_args="--quiet"
	else
		extra_args=""
	fi
	
	for f in "${file[@]}"; do
		if ! $quiet; then
			echo -n "$f":
		fi
		"$0" $extra_args "$f"
		ret_code=$?
		if [ "$ret_code" -eq 0 ] && ! $quiet; then
			echo " OK"
		elif ! $quiet; then
			echo " $ret_code"
			# Max of return code
			global_return=$(max $global_return $ret_code)
		fi
	done
	exit $global_return
else
	if $verbose; then
		echo -n "$file":
	fi
	ffmpeg -v error -i "$file" -f null -
	ret_code=$?
	if [ "$ret_code" -eq 0 ] && $verbose; then
		echo " OK"
	elif $verbose; then
		echo " $ret_code"
	fi
	exit $ret_code
fi       

