# For an explanation of .bashrc, .bash_profile and .profile, see http://superuser.com/questions/789448/choosing-between-bashrc-profile-bash-profile-etc
# In short: environment variables go to .profile, all shell-specific stuff in .bashrc.

# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" -a -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
#case "$TERM" in
#xterm-color)
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
#    ;;
#*)
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;30m\]\u@\h\[\033[0;34m\]:\[\033[0;32m\]\w\[\033[0;37m\]\$\[\033[00m\] '
#    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
#    PS1='${debian_chroot:+($debian_chroot)}\033[00m\u@\h\033[34m:\033[32m\w\033[37m\$\033[00m\] '
#    ;;
#esac

# Comment in the above and uncomment this below for a color prompt
#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;30m\]\u@\h\[\033[0;34m\]:\[\033[0;32m\]\w\[\033[0;37m\]\$\[\033[00m\] '
#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;34m\]\u@\h\[\033[0;37m\]:\[\033[0;32m\]\w\[\033[0;37m\]\$\[\033[00m\] '
PS1='${debian_chroot:+($debian_chroot)}\[\033[1;34m\]\u\[\033[0;37m\]@\[\033[01;34m\]\h\[\033[0;37m\]:\[\033[0;32m\]\w\[\033[0;37m\]\$\[\033[00m\] '

# Change the prompt color when logged on an other machine
if [[ "$SSH_CONNECTION" != "" ]]
then
	PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u\[\033[01;30m\]@\[\033[01;35m\]\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
fi

if [[ ! -z "$PBS_JOBID" ]]
then
	echo "In PBS job '$PBS_JOBID'"
	PS1='\[\033[48;5;10m\]\u\[\033[47m\]\[\033[30m\]@\[\033[48;5;13m\]\h\[\033[47m\]\[\033[30m\]:\[\033[48;5;14m\]\w\[\033[47m\]\[\033[30m\]\$\[$(tput sgr0)\] '
fi


# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
	PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"; history -a'
    ;;
*)
	PROMPT_COMMAND='history -a'
    ;;
esac

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ]; then
	if ls --color -d . >/dev/null 2>&1; then
		# We have a GNU ls
		if hash dircolors 2>/dev/null ; then
			# Dircolors is present
			eval "`dircolors -b`"
			alias ls='ls --color=auto'
#    alias dir='ls --color=auto --format=vertical'
#    alias vdir='ls --color=auto --format=long'
		fi
	elif ls -G -d . >/dev/null 2>&1; then
		# We have a BSD ls
		alias ls='ls -G'
	fi 
fi

if [ "`locale language 2>/dev/null`" == "French" ]; then
	echo ""
	echo "Bienvenue Maître vénéré $USER !"
	echo "Dieu de tous les Dieux !"
	echo "Soyez productif durant cette journée !"
	echo ""
fi

# ne pas historiser cd, ls, bg, fg et clear
export HISTIGNORE="cd:ls:[bf]g:clear"
export HISTSIZE=20000
export HISTFILESIZE=1000000
export HISTCONTROL=ignoredups
export HISTTIMEFORMAT=
shopt -s cmdhist
shopt -s histappend


# make make faster by parallelizing
# Only in interactive shells for safety reasons...
if hash nproc 2>/dev/null; then
	export MAKEFLAGS=-j`nproc`
fi

#/home/xavier/.showcow
[[ -f "/home/xavier/.config/autopackage/paths-bash" ]] && . "/home/xavier/.config/autopackage/paths-bash"

export RUBYOPT=-rubygems

#export R_LIBS_USER=/home/xavier/R/lib/

# Enable colors in ls on mac
export CLICOLORS=1

if [ -f ~/.aliases ]; then 
	. ~/.aliases 
fi

if [ -f ~/.aliases.local ]; then 
	. ~/.aliases.local 
fi

# Source additional local files
if test -n "$(shopt -s nullglob; echo ~/.bashrc.*)"
then
	for f in ~/.bashrc.*; do
	       . $f
	done
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
# par exemple si on tappes tar, seul les fichiers tar seront complétés...
if [[ $BASH =~ /bin/bash$ ]]; then
	prefix=${BASH[@]%bin/bash}
fi
if [ -f ${prefix}bash_completion ]; then
    . ${prefix}bash_completion
elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi


# Stuff found at http://teaching.idallen.com/cst8207/13w/notes/350_startup_files.html#no-output-allowed-for-non-interactive-shells
#shopt -s failglob # Note: disabled because it inteferes with shopt -s nullglob used above and with bash completion
#set -o ignoreeof
#set -o noclobber
#set -o notify
#set -o nounset
#set -o physical
#set -o interactive-comments

# Google Compute servers have very complicated names
if [[ $HOST =~ lindinglab-.+-opensuse-13-[0-9] ]]; then 
       	export HOST=`echo $HOST | sed 's/lindinglab-\(.\+\)-opensuse-13-[[:digit:]]/\1/'`;
	PS1="`echo $PS1 | sed 's/\\\\h/$HOST/'` "
fi
if [[ $HOSTNAME =~ lindinglab-.+-opensuse-13-[0-9] ]]; then 
	export HOSTNAME=`echo $HOSTNAME | sed 's/lindinglab-\(.\+\)-opensuse-13-[[:digit:]]/\1/'`;
	PS1="`echo $PS1 | sed 's/\\\\h/$HOSTNAME/'` "
fi

# Remember if the file was read already
export _READ_BASHRC=$$
